{"version":3,"file":"static/js/186.39913b82.chunk.js","mappings":"8LAwBA,UApBgB,WACd,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAKC,EAAAA,EAAAA,MAOX,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,EAAGI,SAASC,MAAK,SAAAC,GAC9BP,EAAUO,EACX,GACF,GAAE,CAACN,EAAGI,UACPG,QAAQC,IAAIV,GACU,IAAlBA,EAAOW,QACF,sCAGP,yBACGX,EAAOY,KAAI,SAAAJ,GAAG,OACb,uBAAiBA,EAAIK,SAAbL,EAAIN,GADC,KAKpB,C,+LCtBKY,EAAG,mCAEHC,EAAS,wCAOFC,EAAe,mCAAG,WAAMC,GAAN,kFACvBC,EADuB,UARb,iDAQa,gBACc,EADd,oBAC4BJ,GAD5B,kBAGJK,EAAAA,EAAAA,IAAA,UAAaD,IAHT,cAGrBE,EAHqB,OAIrBC,EAAQD,EAASE,KAAKC,QAJD,kBAMpBF,GANoB,gCAQ3BZ,QAAQC,IAAI,KAAMc,SARS,yDAAH,sDAYfC,EAAkB,mCAAG,WAAMC,GAAN,kFAC1BR,EAD0B,UAjBb,8CAiBa,oBACUJ,EADV,kBACuBY,EADvB,kCAGPP,EAAAA,EAAAA,IAAA,UAAaD,IAHN,cAGxBE,EAHwB,OAIxBO,EAAOP,EAASE,KAAKC,QAJG,kBAMvBI,GANuB,gCAQ9BlB,QAAQC,IAAI,KAAMc,SARY,yDAAH,sDAYxB,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACCX,EADD,UACUH,GADV,OACsBc,EADtB,oBAC0Cf,EAD1C,mBAELL,QAAQC,IAAIQ,GAFP,kBAIoBC,EAAAA,EAAAA,IAAA,UAAaD,IAJjC,cAIGE,EAJH,OAKGU,EAAWV,EAASE,KALvB,kBAMIQ,GANJ,kCAQHrB,QAAQC,IAAI,KAAMc,SARf,iFADPC,IAaO,IAAMM,EAAS,mCAAG,WAAMF,GAAN,kFACjBX,EADiB,gBAvCT,yCAuCS,OAENW,EAFM,4BAEsBf,EAFtB,qCAIEK,EAAAA,EAAAA,IAAA,UAAaD,IAJf,cAIfE,EAJe,OAKfY,EAAmBZ,EAASE,KAAKW,KALlB,kBAMdD,GANc,yFAAH,sDAYT3B,EAAc,mCAAG,WAAMwB,GAAN,kFACtBX,EADsB,oBAjDb,uCAiDa,OAENW,EAFM,4BAEsBf,EAFtB,6CAKHK,EAAAA,EAAAA,IAAA,UAAaD,IALV,cAKpBE,EALoB,OAMpBc,EAAcd,EAASE,KAAKC,QANR,kBAOnBW,GAPmB,gCAU1BzB,QAAQC,IAAI,KAAMc,SAVQ,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","components/Server/Server.js"],"sourcesContent":["import { GetFilmWatches } from 'components/Server/Server';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [review, setReview] = useState([]);\n  const id = useParams();\n  useEffect(() => {\n    GetFilmWatches(id.movieId).then(rev => {\n      setReview(rev);\n    });\n  }, [id.movieId]);\n  console.log(review);\n  if (review.length === 0) {\n    return <div>Nothing</div>;\n  }\n  return (\n    <div>\n      {review.map(rev => (\n        <p key={rev.id}>{rev.content}</p>\n      ))}\n    </div>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\nconst KEY = `465b4aa22561626299c60e60f8601e8f`;\nconst URL_TRENDING = `https://api.themoviedb.org/3/trending/all/day?`;\nconst URL_MOVIE = `\nhttps://api.themoviedb.org/3/movie/`;\nconst URL_FETCHBYNAME = `\nhttps://api.themoviedb.org/3/search/movie`;\nconst URL_ACTORS = `\nhttps://api.themoviedb.org/3/movie/`;\nconst URL_WATCHES = `https://api.themoviedb.org/3/movie/`;\nexport const GetFilmTrending = async page => {\n  const url = `${URL_TRENDING}page=${(page = 1)}&api_key=${KEY}`;\n  try {\n    const response = await axios.get(`${url}`);\n    const movie = response.data.results;\n    // console.log(movie);\n    return movie;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const GetFetchFilmByName = async query => {\n  const url = `${URL_FETCHBYNAME}?api_key=${KEY}&query=${query}&language=en`;\n  try {\n    const response = await axios.get(`${url}`);\n    const name = response.data.results;\n    // console.log(name);\n    return name;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nGetFetchFilmByName();\nexport async function GetFilmInfo(movie_id) {\n  const url = `${URL_MOVIE}${movie_id}?api_key=${KEY}&language=en-US`;\n  console.log(url);\n  try {\n    const response = await axios.get(`${url}`);\n    const nameById = response.data;\n    return nameById;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport const GetActors = async movie_id => {\n  const url = `\n    ${URL_ACTORS}${movie_id}/credits?api_key=${KEY}&language=en-US`;\n  try {\n    const response = await axios.get(`${url}`);\n    const SearchActorsById = response.data.cast;\n    return SearchActorsById;\n  } catch (error) {\n    // console.log(error.message);\n  }\n};\n\nexport const GetFilmWatches = async movie_id => {\n  const url = `\n        ${URL_WATCHES}${movie_id}/reviews?api_key=${KEY}&language=en-US\n      `;\n  try {\n    const response = await axios.get(`${url}`);\n    const watchesFilm = response.data.results;\n    return watchesFilm;\n    // console.log(watchesFilm);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["useState","review","setReview","id","useParams","useEffect","GetFilmWatches","movieId","then","rev","console","log","length","map","content","KEY","URL_MOVIE","GetFilmTrending","page","url","axios","response","movie","data","results","message","GetFetchFilmByName","query","name","GetFilmInfo","movie_id","nameById","GetActors","SearchActorsById","cast","watchesFilm"],"sourceRoot":""}