{"version":3,"file":"static/js/247.9c63878b.chunk.js","mappings":"8LA+BA,UA3Ba,WACX,OAA4BA,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAKC,EAAAA,EAAAA,MAOX,OANAC,QAAQC,IAAIH,IACZI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAUL,EAAGM,SAASC,MAAK,SAAAC,GACzBT,EAAUS,EACX,GACF,GAAE,CAACR,EAAGM,UACFR,GAGLI,QAAQC,IAAIL,IAEV,yBACGA,EAAOW,KAAI,SAAAC,GAAG,OACb,4BACE,gBACEC,IAAG,yCAAoCD,EAAIE,cAC3CC,IAAI,MAEN,uBAAIH,EAAII,SALAJ,EAAIV,GADD,OALV,IAgBV,C,+LC7BKe,EAAG,mCAEHC,EAAS,wCAOFC,EAAe,mCAAG,WAAMC,GAAN,kFACvBC,EADuB,UARb,iDAQa,gBACc,EADd,oBAC4BJ,GAD5B,kBAGJK,EAAAA,EAAAA,IAAA,UAAaD,IAHT,cAGrBE,EAHqB,OAIrBC,EAAQD,EAASE,KAAKC,QAJD,kBAMpBF,GANoB,gCAQ3BpB,QAAQC,IAAI,KAAMsB,SARS,yDAAH,sDAYfC,EAAkB,mCAAG,WAAMC,GAAN,kFAC1BR,EAD0B,UAjBb,8CAiBa,oBACUJ,EADV,kBACuBY,EADvB,kCAGPP,EAAAA,EAAAA,IAAA,UAAaD,IAHN,cAGxBE,EAHwB,OAIxBP,EAAOO,EAASE,KAAKC,QAJG,kBAMvBV,GANuB,gCAQ9BZ,QAAQC,IAAI,KAAMsB,SARY,yDAAH,sDAYxB,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACCV,EADD,UACUH,GADV,OACsBa,EADtB,oBAC0Cd,EAD1C,mBAELb,QAAQC,IAAIgB,GAFP,kBAIoBC,EAAAA,EAAAA,IAAA,UAAaD,IAJjC,cAIGE,EAJH,OAKGS,EAAWT,EAASE,KALvB,kBAMIO,GANJ,kCAQH5B,QAAQC,IAAI,KAAMsB,SARf,iFADPC,IAaO,IAAMrB,EAAS,mCAAG,WAAMwB,GAAN,kFACjBV,EADiB,gBAvCT,yCAuCS,OAENU,EAFM,4BAEsBd,EAFtB,qCAIEK,EAAAA,EAAAA,IAAA,UAAaD,IAJf,cAIfE,EAJe,OAKfU,EAAmBV,EAASE,KAAKS,KALlB,kBAMdD,GANc,yFAAH,sDAYTE,EAAc,mCAAG,WAAMJ,GAAN,kFACtBV,EADsB,oBAjDb,uCAiDa,OAENU,EAFM,4BAEsBd,EAFtB,6CAKHK,EAAAA,EAAAA,IAAA,UAAaD,IALV,cAKpBE,EALoB,OAMpBa,EAAcb,EAASE,KAAKC,QANR,kBAOnBU,GAPmB,gCAU1BhC,QAAQC,IAAI,KAAMsB,SAVQ,yDAAH,qD","sources":["components/Cast/Cast.jsx","components/Server/Server.js"],"sourcesContent":["import { GetActors } from 'components/Server/Server';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [actors, setActors] = useState();\n  const id = useParams();\n  console.log(id);\n  useEffect(() => {\n    GetActors(id.movieId).then(actor => {\n      setActors(actor);\n    });\n  }, [id.movieId]);\n  if (!actors) {\n    return null;\n  }\n  console.log(actors);\n  return (\n    <div>\n      {actors.map(inf => (\n        <div key={inf.id}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${inf.profile_path}`}\n            alt=\"\"\n          />\n          <p>{inf.name}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\nconst KEY = `465b4aa22561626299c60e60f8601e8f`;\nconst URL_TRENDING = `https://api.themoviedb.org/3/trending/all/day?`;\nconst URL_MOVIE = `\nhttps://api.themoviedb.org/3/movie/`;\nconst URL_FETCHBYNAME = `\nhttps://api.themoviedb.org/3/search/movie`;\nconst URL_ACTORS = `\nhttps://api.themoviedb.org/3/movie/`;\nconst URL_WATCHES = `https://api.themoviedb.org/3/movie/`;\nexport const GetFilmTrending = async page => {\n  const url = `${URL_TRENDING}page=${(page = 1)}&api_key=${KEY}`;\n  try {\n    const response = await axios.get(`${url}`);\n    const movie = response.data.results;\n    // console.log(movie);\n    return movie;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const GetFetchFilmByName = async query => {\n  const url = `${URL_FETCHBYNAME}?api_key=${KEY}&query=${query}&language=en`;\n  try {\n    const response = await axios.get(`${url}`);\n    const name = response.data.results;\n    // console.log(name);\n    return name;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nGetFetchFilmByName();\nexport async function GetFilmInfo(movie_id) {\n  const url = `${URL_MOVIE}${movie_id}?api_key=${KEY}&language=en-US`;\n  console.log(url);\n  try {\n    const response = await axios.get(`${url}`);\n    const nameById = response.data;\n    return nameById;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport const GetActors = async movie_id => {\n  const url = `\n    ${URL_ACTORS}${movie_id}/credits?api_key=${KEY}&language=en-US`;\n  try {\n    const response = await axios.get(`${url}`);\n    const SearchActorsById = response.data.cast;\n    return SearchActorsById;\n  } catch (error) {\n    // console.log(error.message);\n  }\n};\n\nexport const GetFilmWatches = async movie_id => {\n  const url = `\n        ${URL_WATCHES}${movie_id}/reviews?api_key=${KEY}&language=en-US\n      `;\n  try {\n    const response = await axios.get(`${url}`);\n    const watchesFilm = response.data.results;\n    return watchesFilm;\n    // console.log(watchesFilm);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["useState","actors","setActors","id","useParams","console","log","useEffect","GetActors","movieId","then","actor","map","inf","src","profile_path","alt","name","KEY","URL_MOVIE","GetFilmTrending","page","url","axios","response","movie","data","results","message","GetFetchFilmByName","query","GetFilmInfo","movie_id","nameById","SearchActorsById","cast","GetFilmWatches","watchesFilm"],"sourceRoot":""}